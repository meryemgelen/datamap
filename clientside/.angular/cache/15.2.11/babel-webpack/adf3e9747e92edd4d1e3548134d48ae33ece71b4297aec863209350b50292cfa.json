{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MarkerService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/locations';\n  }\n  getMarkers() {\n    return this.http.get(this.apiUrl);\n  }\n  addMarker(marker) {\n    return this.http.post(this.apiUrl, marker);\n  }\n  deleteMarker(lat, lng) {\n    return this.http.delete(`${this.apiUrl}?lat=${lat}&lng=${lng}`);\n  }\n  static {\n    this.ɵfac = function MarkerService_Factory(t) {\n      return new (t || MarkerService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: MarkerService,\n      factory: MarkerService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,aAAa;EAGxBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,iCAAiC;EAEX;EAEvCC,UAAU;IACR,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAQ,IAAI,CAACC,MAAM,CAAC;EAC1C;EAEAC,SAAS,CAACC,MAAkD;IAC1D,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,IAAI,CAACH,MAAM,EAAEE,MAAM,CAAC;EAC5C;EAEAE,YAAY,CAACC,GAAW,EAAEC,GAAW;IACnC,OAAO,IAAI,CAACT,IAAI,CAACU,MAAM,CAAC,GAAG,IAAI,CAACP,MAAM,QAAQK,GAAG,QAAQC,GAAG,EAAE,CAAC;EACjE;;;uBAfWX,aAAa;IAAA;EAAA;;;aAAbA,aAAa;MAAAa,SAAbb,aAAa;MAAAc,YAFZ;IAAM;EAAA","names":["MarkerService","constructor","http","getMarkers","get","apiUrl","addMarker","marker","post","deleteMarker","lat","lng","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\meryem\\Desktop\\duyg\\my-angular-map\\src\\app\\services\\marker.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MarkerService {\n  private apiUrl = 'http://localhost:3000/locations';\n\n  constructor(private http: HttpClient) {}\n\n  getMarkers(): Observable<any[]> {\n    return this.http.get<any[]>(this.apiUrl);\n  }\n\n  addMarker(marker: { lat: number; lng: number; note: string }): Observable<any> {\n    return this.http.post(this.apiUrl, marker);\n  }\n\n  deleteMarker(lat: number, lng: number): Observable<any> {\n    return this.http.delete(`${this.apiUrl}?lat=${lat}&lng=${lng}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}